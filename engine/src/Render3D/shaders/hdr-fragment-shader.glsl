#version 330 core

/////////////////////////////////////////////////////////////
//////////////////////// UNIFORMS ///////////////////////////
/////////////////////////////////////////////////////////////
uniform sampler2D u_hdrBuffer;
uniform sampler2D u_blurBuffer;
uniform float u_exposure;

/////////////////////////////////////////////////////////////
//////////////////////// VARYING ////////////////////////////
/////////////////////////////////////////////////////////////
in vec2 v_texCoord;

/////////////////////////////////////////////////////////////
/////////////////////////// OUT /////////////////////////////
/////////////////////////////////////////////////////////////
out vec4 o_fragColor;

/////////////////////////////////////////////////////////////
////////////////////////// MAIN /////////////////////////////
/////////////////////////////////////////////////////////////
void main() {
    const float gamma = 2.2;
    vec3 hdrColor = texture(u_hdrBuffer, v_texCoord).rgb;
    vec3 blurColor = texture(u_blurBuffer, v_texCoord).rgb;
    hdrColor += blurColor;
    // reinhard
    // vec3 result = hdrColor / (hdrColor + vec3(1.0));
    // exposure
    vec3 result = vec3(1.0) - exp(-hdrColor * u_exposure);
    // also gamma correct while we're at it
    result = pow(result, vec3(1.0 / gamma));
    o_fragColor = vec4(result, 1.0);
}
