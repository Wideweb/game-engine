#version 330 core

/////////////////////////////////////////////////////////////
//////////////////////// ATTRIBUTES /////////////////////////
/////////////////////////////////////////////////////////////
layout(triangles) in;
layout(triangle_strip, max_vertices = 18) out;

/////////////////////////////////////////////////////////////
//////////////////////// UNIFORMS ///////////////////////////
/////////////////////////////////////////////////////////////
uniform mat4 u_cubeMatrices[6];

/////////////////////////////////////////////////////////////
///////////////////////// VARYING ///////////////////////////
/////////////////////////////////////////////////////////////
// переменная FragPos вычисляется в геометрическом шейдере
// и выдается для каждого вызова EmitVertex()
out vec4 v_fragPos;

/////////////////////////////////////////////////////////////
////////////////////////// MAIN /////////////////////////////
/////////////////////////////////////////////////////////////
void main() {
    for (int face = 0; face < 6; ++face) {
        // встроенная переменная, определяющая в какую
        // грань кубической карты идет рендер
        gl_Layer = face;
        for (int i = 0; i < 3; ++i) // цикл по всем вершинам треугольника
        {
            v_fragPos = gl_in[i].gl_Position;
            gl_Position = u_cubeMatrices[face] * v_fragPos;
            EmitVertex();
        }
        EndPrimitive();
    }
}